spring:
  datasource:
    driverClassName: org.postgresql.Driver
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${DATABASE_USERNAME:keycloak}
    password: ${DATABASE_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show-sql: true
        format-sql: true
      javax.persistence:
        query.timeout: 50

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
          jwk-set-uri: ${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}

server:
  error:
    include-message: always
    include-binding-errors: always

feign:
  client.config:
    SolicitationClient:
      read-timeout: 100
      connect-timeout: 100

external.services:
  url:
    analise: ${ANALISE_URL:http://localhost:9999/api}
    contas: ${CONTAS_URL:http://localhost:8888/api}

management:
  endpoint:
    health:
      show-components: "ALWAYS"
  health:
    db:
      enable: true
  endpoints:
    web:
      exposure:
        include: info,health,prometheus
    prometheus:
      enabled: true
  metrics:
    tags:
      aplicacao: ${NOME_DA_APLICACAO:servi√ßo de proposta}
      ambiente: ${AMBIENTE:desenvolvimento}

  opentracing:
    jaegar:
      enabled: ${JAEGAR_ENABLED:true}
      service-name: proposta
      http-sender.url: ${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
      probabilistic-sampler.sampling-rate: ${JAEGER_SAMPLER:1}
